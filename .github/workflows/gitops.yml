name: Terraform CI/CD

on:
  push:
    branches: [ main, feature, develop ]
    paths:
      - 'terraform/**'
      - '.github/workflows/gitops.yml'
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/gitops.yml'
  workflow_dispatch:

env:
  TERRAFORM_DIR: terraform
  AWS_REGION: us-east-1
  TF_VAR_github_owner: ${{ github.repository_owner }}
  TF_VAR_github_repository: ${{ github.event.repository.name }}

jobs:
  fmt-validate:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_DIR }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Cache Terraform plugin directory
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ hashFiles(format('{0}/.terraform.lock.hcl', env.TERRAFORM_DIR)) }}
          restore-keys: |
            terraform-${{ runner.os }}-

      # Check indentation, spaces, etc.
      - name: Terraform fmt
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init -backend=false -input=false

      # Check configuration, references, errors, etc.
      - name: Terraform validate
        run: terraform validate -no-color

  deploy:
    needs: fmt-validate
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature')

    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_DIR }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: terraform-cicd

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform plan
        run: terraform plan -input=false -no-color -out=tfplan

      # - name: Terraform apply
      #   run: terraform apply -input=false -auto-approve tfplan
